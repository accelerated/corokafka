language: cpp

sudo: required

compiler:
  - g++
  - clang

os: linux

dist: bionic

addons:
  apt:
    update: true
    sources:
      - sourceline: 'ppa:mhier/libboost-latest'
    packages:
      - ninja-build
      - libboost1.70-dev
      - valgrind
      - zookeeper
      - zookeeperd
env:
  - CXXSTANDARD=17

before_script:
  - NUM_TOPICS=10
  - KAFKA_VERSION=2.12-2.4.0
  - RD_KAFKA_VERSION=v1.3.0
  - wget http://apache.cs.utah.edu/kafka/2.4.0/kafka_$KAFKA_VERSION.tgz && tar -xvzf kafka_$KAFKA_VERSION.tgz
  - ./kafka_$KAFKA_VERSION/bin/kafka-server-start.sh ./kafka_$KAFKA_VERSION/config/server.properties > /dev/null 2> /dev/null &
  - while ! echo "asd" | nc localhost 9092; do sleep 1; done
  - n=1; while ((n<=$NUM_TOPICS)); do ./kafka_$KAFKA_VERSION/bin/kafka-topics.sh --create --zookeeper localhost:2181 --topic topic_$n --partitions 4 --replication-factor 1; n=$((n+1)); done

script:
  - INSTALL_DIR=/home/travis/build/accelerated/corokafka/install
  - mkdir install

# Build and install GTEST framework
  - git clone https://github.com/google/googletest.git
  - cd googletest
  - cmake -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR -S . -G Ninja
  - ninja install
  - cd ..

# Build and install rdkafka
  - git clone https://github.com/edenhill/librdkafka.git --branch $RD_KAFKA_VERSION
  - cd librdkafka
  - cmake -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR -S . -G Ninja
  - ninja install
  - cd ..

# Build and install cppkafka
  - git clone https://github.com/mfontanini/cppkafka.git
  - cd cppkafka
  - cmake -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR -S . -G Ninja
  - ninja install
  - cd ..

# Build and install quantum
  - git clone https://github.com/bloomberg/quantum.git
  - cd quantum
  - cmake -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR -DQUANTUM_BOOST_USE_VALGRIND=ON -S . -G Ninja
  - ninja install
  - cd ..

# Build and run corokafka
  - cmake -DCMAKE_VERBOSE_MAKEFILE=ON
        -DCMAKE_PREFIX_PATH=$INSTALL_DIR
        -DCOROKAFKA_CPPKAFKA_STATIC_LIB=ON
        -DCOROKAFKA_RDKAFKA_STATIC_LIB=ON
        -DCOROKAFKA_BOOST_STATIC_LIBS=ON
        -DCOROKAFKA_ENABLE_PIC=ON
        -DCOROKAFKA_ENABLE_TESTS=ON
        -DCMAKE_BUILD_TYPE=Debug
        -G Ninja -S .
  - ninja CoroKafkaTests
  - ./tests/CoroKafkaTests.Linux
